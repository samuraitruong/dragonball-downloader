// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConceptDownloader.Models;
//
//    var getlinkAzModel = GetlinkAzModel.FromJson(jsonString);

namespace ConceptDownloader.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetlinkAzModel
    {
        [JsonProperty("trangthai")]
        public long Trangthai { get; set; }

        [JsonProperty("filename")]
        public string Filename { get; set; }

        [JsonProperty("size")]
        public string Size { get; set; }

        [JsonProperty("linkvip")]
        public string Linkvip { get; set; }

        [JsonProperty("proxy")]
        public object Proxy { get; set; }
    }

    public partial class GetlinkAzModel
    {
        public static GetlinkAzModel FromJson(string json) => JsonConvert.DeserializeObject<GetlinkAzModel>(json, ConceptDownloader.Models.Converter.Settings);
    }

    public static class GetlinkAzModelSerialize
    {
        public static string ToJson(this GetlinkAzModel self) => JsonConvert.SerializeObject(self, ConceptDownloader.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
