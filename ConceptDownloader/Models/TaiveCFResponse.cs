// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConceptDownloader.Models;
//
//    var taiveCfResponse = TaiveCfResponse.FromJson(jsonString);

namespace ConceptDownloader.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TaiveCfResponse
    {
        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("link")]
        public string Link { get; set; }

        [JsonProperty("jw")]
        public string Jw { get; set; }
    }

    public partial class TaiveCfResponse
    {
        public static TaiveCfResponse FromJson(string json) => JsonConvert.DeserializeObject<TaiveCfResponse>(json, ConceptDownloader.Models.TaiveCfResponseConverter.Settings);
    }

    public static class TaiveCfResponseSerialize
    {
        public static string ToJson(this TaiveCfResponse self) => JsonConvert.SerializeObject(self, ConceptDownloader.Models.TaiveCfResponseConverter.Settings);
    }

    internal static class TaiveCfResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
