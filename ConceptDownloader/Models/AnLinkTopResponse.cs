// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConceptDownloader.Models;
//
//    var anLinkTopResponse = AnLinkTopResponse.FromJson(jsonString);

namespace ConceptDownloader.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AnLinkTopResponse
    {
        [JsonProperty("is_video")]
        public long IsVideo { get; set; }

        [JsonProperty("file_type")]
        public string FileType { get; set; }

        [JsonProperty("error")]
        public long Error { get; set; }

        [JsonProperty("url")]
        public string Url { get; set; }

        [JsonProperty("html")]
        public string Html { get; set; }

        [JsonProperty("msg")]
        public string Msg { get; set; }

        [JsonProperty("is_vip")]
        public long IsVip { get; set; }

        [JsonProperty("last_time")]
        public long LastTime { get; set; }

        [JsonProperty("current_time")]
        public long CurrentTime { get; set; }

        [JsonProperty("ip")]
        public string Ip { get; set; }

        [JsonProperty("ads")]
        public long Ads { get; set; }
    }

    public partial class AnLinkTopResponse
    {
        public static AnLinkTopResponse FromJson(string json) => JsonConvert.DeserializeObject<AnLinkTopResponse>(json, ConceptDownloader.Models.Converter.Settings);
    }

    public static class AnLinkTopResponseSerialize
    {
        public static string ToJson(this AnLinkTopResponse self) => JsonConvert.SerializeObject(self, ConceptDownloader.Models.AnLinkTopResponseConverter.Settings);
    }

    internal static class AnLinkTopResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
