// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using LinkFetcher;
//
//    var fShareGetLinkResponse = FShareGetLinkResponse.FromJson(jsonString);

namespace ConceptDownloader.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class FShareGetLinkResponse
    {
        [JsonProperty("url")]
        public string Url { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("wait_time")]
        public long WaitTime { get; set; }

        [JsonProperty("extra")]
        public List<object> Extra { get; set; }
    }

    public partial class FShareGetLinkResponse
    {
        public static FShareGetLinkResponse FromJson(string json) => JsonConvert.DeserializeObject<FShareGetLinkResponse>(json, FShareGetLinkResponseConverter.Settings);
    }

    public static class FShareGetLinkResponseSerialize
    {
        public static string ToJson(this FShareGetLinkResponse self) => JsonConvert.SerializeObject(self, FShareGetLinkResponseConverter.Settings);
    }

    internal static class FShareGetLinkResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
