// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConceptDownloader.Models;
//
//    var linksVipResponse = LinksVipResponse.FromJson(jsonString);

namespace ConceptDownloader.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LinksVipResponse
    {
        [JsonProperty("r")]
        public List<LinksVipItem> Links { get; set; }

        [JsonProperty("spider")]
        public string Spider { get; set; } 
    }

    public partial class LinksVipItem
    {
        [JsonProperty("url")]
        public string Url { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class LinksVipResponse
    {
        public static LinksVipResponse FromJson(string json) => JsonConvert.DeserializeObject<LinksVipResponse>(json, ConceptDownloader.Models.Converter.Settings);
    }

    public static class LinksVipResponseSerialize
    {
        public static string ToJson(this LinksVipResponse self) => JsonConvert.SerializeObject(self, ConceptDownloader.Models.Converter.Settings);
    }

    internal static class LinksVipResponseConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

